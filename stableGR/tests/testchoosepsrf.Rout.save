
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(stableGR)
Loading required package: mcmcse
mcmcse: Monte Carlo Standard Errors for MCMC
Version 1.4-1 created on 2020-01-29.
copyright (c) 2012, James M. Flegal, University of California, Riverside
                    John Hughes, University of Colorado, Denver
                    Dootika Vats, University of Warwick
                    Ning Dai, University of Minnesota
 For citation information, type citation("mcmcse").
 Type help("mcmcse-package") to get started.

> minESS <- mcmcse::minESS
> p <- 1
> alpha <- .05
> m <- 5
> 
> 
> #### Check the case where delta is null (epsilon is instead given)
> # That is, find the effective sample size based on epsilon
> epsilon <- .05
> out1a <- target.psrf(p, epsilon = epsilon, m = m, alpha = alpha)
> Tee <- as.numeric(minESS(p, epsilon, alpha = alpha)) #min effective sample size
> del <- sqrt(1 + m/Tee) - 1
> arr <- 1 + del  
> out1b <- list(psrf = arr, epsilon = epsilon)
> all.equal(out1a, out1b)
[1] TRUE
> 
> #### Check the case where delta is NOT null (it's given)
> # That is, find the effective sample size based on delta
> delta <- .01
> out2a <- target.psrf(p, delta = delta, m = m, alpha = alpha)
> Tee <- M <- m/((1+delta)^2 - 1)
> epsilon <- as.numeric(minESS(p, eps = epsilon, ess = M))
> del <- sqrt(1 + m/Tee) - 1
> arr <- 1 + del  
> out2b <- list(psrf = arr, epsilon = epsilon)
> all.equal(out2a, out2b)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.190   0.034   0.213 
